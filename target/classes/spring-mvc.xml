<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd        
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx 
     	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
     	http://www.springframework.org/schema/aop 
     	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/mvc
     	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd"> 
    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.mgp" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>   
    <mvc:annotation-driven/>
    <!-- 内容协商管理器  -->
    <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
    <!-- <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        扩展名至mimeType的映射,即 /user.json => application/json
        <property name="favorPathExtension" value="true"/>
        用于开启 /userinfo/123?format=json 的支持
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        是否忽略Accept Header
        <property name="ignoreAcceptHeader" value="false"/>

        <property name="mediaTypes"> 扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 
            <value>
                json=application/json
                xml=application/xml
                html=text/html
            </value>
        </property>
        默认的content type
        <property name="defaultContentType" value="text/html"/>
    </bean> -->
    <!--在mvc:annotation-driven里面配置使用内容协商-->  
    <mvc:annotation-driven content-negotiation-manager= "contentNegotiationManager">
         <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                        <value>WriteDateUseDateFormat</value>
                        <value>WriteNullListAsEmpty</value>
                        <value>WriteNullStringAsEmpty</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler/>

	<!--1、检查扩展名（如my.pdf）；2、检查Parameter（如my?format=pdf）；3、检查Accept Header-->  
    <bean id= "contentNegotiationManager" class= "org.springframework.web.accept.ContentNegotiationManagerFactoryBean">  
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json --> 
        <property name= "favorPathExtension" value= "true" />  
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->  
        <property name= "favorParameter" value= "true" />  
        <property name= "parameterName" value= "datatype"/>  
        <!-- 是否忽略Accept Header -->  
        <property name= "ignoreAcceptHeader" value= "false"/>
          
        <property name= "mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->  
            <map>  
                <entry key="3" value="application/json"/>
                <entry key="1" value="application/xml"/>
            </map> 
        </property>
        <!-- 默认的content type --> 
        <property name= "defaultContentType" value= "application/json" /> 
    </bean>  
  
    <!-- ========================= VIEW定义 ========================= -->  
    <!-- 内容协商视图解析器；根据客户端不同的请求决定不同的view进行响应 -->  
    <!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver） -->  
    <bean class= "org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
        <property name="order" value="0"/>  
        
        <!-- 内容协商管理器 用于决定media type -->  
        <property name= "contentNegotiationManager" ref= "contentNegotiationManager"/>  
        
        <!-- 默认视图 放在解析链最后 -->  
        <property name="defaultViews">  
            <list>  
            </list>  
        </property>
    </bean>  

    <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler />  
    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
    <!-- 对模型视图添加前后缀 -->
    <!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
      p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/> -->
      <!-- Velocity视图解析器    默认视图  -->
	<bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="viewNames" value="*.html" />
        <property name="suffix" value=""/>
        <property name="dateToolAttribute" value="dateTool" />
        <property name="numberToolAttribute" value="numberTool" /> 
        <property name="requestContextAttribute" value="rc"/>
        <property name="order" value="0"/>
	</bean>
	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/page/" />
        <property name="velocityProperties">
          <props>
            <prop key="input.encoding">UTF-8</prop>
            <prop key="output.encoding">UTF-8</prop>
            <prop key="contentType">text/html;charset=UTF-8</prop>
          </props>
        </property>
	</bean>
	
	<!-- JSP视图解析器  -->
    <bean id="viewResolverJsp" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="viewNames" value="*.jsp" />
        <property name="suffix" value=""/>
        <property name="order" value="1"/>
    </bean>
    
    <!-- FreeMarker视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
	    <property name="contentType" value="text/html; charset=utf-8"/>
	    <property name="cache" value="false"/>
	    <property name="viewNames" value="*.ftl" />
        <property name="suffix" value=""/>
        <property name="order" value="2"/>
	</bean>
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	    <property name="templateLoaderPath" value="/WEB-INF/page/"/>
	</bean>
	
</beans>